setwd("~/Desktop/GitHub practice/R-for-Data-Science-and-MachineLearning-with-NBICTLab-Batch-8/RDSML-Day-52 ðŸ‘‰ Polynomial Regression in R")
library(readr)
polynom_data <- read_csv("polynom_data.csv")
View(polynom_data)
#importing the data set
dataset <- read.csv("polynom_data.csv")
attach(dataset)
# plot the data
plot(x, y)
# plot the data
plot(x, y, main = "Polynomial Regression Example", pch =19)
#Fit a quadratic (degree 2) polynomial regression
pplynom_model <- lm(y)
#Fit a quadratic (degree 2) polynomial regression
pplynom_model <- lm(y ~ poly(x, 2,raw = TRUE))
#Fit a quadratic (degree 2) polynomial regression
polynom_model <- lm(y ~ poly(x, 2,raw = TRUE))
summary(polynom_model)
#Create new data for prediction
x_new <- seq(min(x), max(x), length.out =100)
x_new
x_new <- data.frame(x_new)
x_new
#Create new data for prediction
x_new <- seq(min(x), max(x), length.out =100)
y_pred <- prediction(polynom_model, newdata = data,frame(x=x_new))
#Create new data for prediction
x_new <- seq(min(x), max(x), length.out =100)
y_pred <- prediction(polynom_model, newdata = data.frame(x=x_new))
y_pred <- predict(polynom_model, newdata = data.frame(x=x_new))
y_pred
data.frame(x_new, y_pred)
pred_data <- data.frame(x_new, y_pred)
pred_data
# Adding a fitted curve to the plot
lines(x_new, y_pred, col = "blue", lwd = 2)
#Fit a cubic (degree 3) polynomial regression
polynom_model <- lm(y ~ poly(x, 3,raw = TRUE))
#Fit a cubic (degree 3) polynomial regression
polynom_model3 <- lm(y ~ poly(x, 3,raw = TRUE))
summary(polynom_model3)
lines(x_new,
predict(polynom_model3, newdata = data.frame(x = x_new)),
col = "red", lwd = 2, lty = 2)
legend("topright", legend = c("Degree2", "Degree3")
col = c("blue", "red"))
legend("topright", legend = c("Degree2", "Degree3"),
col = c("blue", "red"))
