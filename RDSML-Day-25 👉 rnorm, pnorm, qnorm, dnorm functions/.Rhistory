setwd("~/Desktop/GitHub practice/R-for-Data-Science-and-MachineLearning-with-NBICTLab-Batch-8/RDSML-Day-25 ðŸ‘‰ rnorm, pnorm, qnorm, dnorm functions")
# rnorm= Random Normal Distribution
rnorm(10)
# rnorm= Random Normal Distribution
x <- rnorm(10)
mean(x)
sd(x)
# rnorm= Random Normal Distribution
x <- rnorm(100)
mean(x)
sd(x)
x
mean(x)
sd(x)
# rnorm= Random Normal Distribution( mean = near '0', sd = near '1')
x <- rnorm(1000)
mean(x)
sd(x)
# rnorm= Random Normal Distribution( mean = near '0', sd = near '1')
x <- rnorm(10000)
mean(x)
sd(x)
mean(x)
sd(x)
y <- rnorm(10, mean =100, sd= 5)
y
mean(y)
sd(y)
y <- rnorm(100, mean =100, sd= 5)
y
mean(y)
sd(y)
# At z = 0 then the value of probability is 0.5
pnorm(0)
pnorm(-1.96)
pnorm(1.88)
pnorm(1.96)
pnorm(-1.64)
#qnorm usually take the value of
qnorm(0)
#qnorm usually take the value of
qnorm(0.5)
qnorm (.025)
# dnorm usually take the z value and give output
# Y axis value for z = 0
dnorm(0)
#lets use the dnorm to draw the normal distribution.
zvalues <- seq(-0.4, 4.0, by 0.1)
#lets use the dnorm to draw the normal distribution.
zvalues <- seq(-0.4, 4.0, by = 0.1)
zvalues
#lets use the dnorm to draw the normal distribution.
zvalues <- seq(-4.0, 4.0, by = 0.1)
zvalues
dvalues <- dnorm(dvalues)
dvalues <- dnorm(dvalues)
#lets use the dnorm to draw the normal distribution.
zvalues <- seq(-4.0, 4.0, by = 0.1)
dvalues <- dnorm(dvalues)
#lets use the dnorm to draw the normal distribution.
zvalues <- seq(-4.0, 4.0, by = 0.1)
dvalues
dvalues <- dnorm(zvalues)
dvalues
ploy(zvalues, dvalues)
ploy(zvalues, dvalues)
plot(zvalues, dvalues)
