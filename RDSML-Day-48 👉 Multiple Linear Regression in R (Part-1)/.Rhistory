# Importing the dataset
dataset <- read.csv("Salary_Data.csv")
# Importing the dataset
dataset <- read.csv("Salary_Data.csv")
# Importing the dataset
dataset <- read.csv("Salary_Data.csv")
setwd("~/Desktop/GitHub practice/R-for-Data-Science-and-MachineLearning-with-NBICTLab-Batch-8/RDSML-Day-47 ğŸ‘‰ Simple Linear Regression in R (Part-2)")
# Importing the dataset
dataset <- read.csv("Salary_Data.csv")
# Splitting the dataset into the training set and test set
# install.packages("caTools")
library(caTools)
set.seed(123)
split <- sample.split(dataset$Salary, SplitRatio = 2/3)
split
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
regressor <- lm(formula = Salary ~ YearsExperience,
data = training_set)
# Checking the summary of the model
summary(regressor)
m
y_pred = predict(regressor, newdata = training_set)
library(ggplot2)
ggplot() +
geom_point(aes(x=training_set$YearsExperience, y=training_set$Salary),
colour='red') +
geom_line(aes(x=training_set$YearsExperience, y=y_pred),
colour='blue') +
ggtitle("Salary vs Experience") +
xlab('Years of experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x=test_set$YearsExperience, y=test_set$Salary),
colour='red') +
geom_line(aes(x=test_set$YearsExperience, y=predict(regressor, newdata = test_set)),
colour='blue') +
ggtitle("Salary vs Experience (Test Set)") +
xlab('Years of experience') +
ylab('Salary')
setwd("~/Desktop/GitHub practice/R-for-Data-Science-and-MachineLearning-with-NBICTLab-Batch-8/RDSML-Day-48 ğŸ‘‰ Multiple Linear Regression in R (Part-1)")
# Importing the dataset
dataset <- read.csv("50_Startups.csv")
# Importing the dataset
dataset <- read.csv("50_Startups.csv")
# Encoding the categorical data
dataset$State <- factor(dataset$State,
levels = c('New York', 'California', 'Florida'),
labels = c(1, 2, 3))
library(caTools)
set.seed(123)
split <- sample.split(dataset$Profit, SplitRatio = 0.8)
training_set <- subset(dataset, split == TRUE)
test_set <- subset(dataset, split == FALSE)
regressor <- lm(formula = Profit ~ R.D.Spend + Administration + Marketing.Spend + State,
data = training_set)
summary(regressor)
