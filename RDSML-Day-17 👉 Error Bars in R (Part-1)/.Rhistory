setwd("~/Desktop/GitHub practice/R-for-Data-Science-and-MachineLearning-with-NBICTLab-Batch-8/RDSML-Day-16 ðŸ‘‰ Barplot in R (Part-2)")
ggplot(data = myCarData, aes(x = factor(cyl))) +
geom_bar(stat = "count", width = 0.7, fill = "steelblue") +
theme_minimal()
# Creating a data frame
dataset = data.frame(dose = c("D0.5", "D1", "D2"),
len = c(4.2, 10, 29.5))
library(ggplot2)
# Basic barplot
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity")
# Horizontal barplot
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity") +
coord_flip()
# Changing the width of bars
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", width = .5)
# Changing colors
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", color = "blue", fill = "white", width = .5)
# Minimal theme with blue fill color
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal()
# Barplot with labels
# Outeside bars
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = len), vjust = -0.5, size = 3, color = "#9F9F9F") +
theme_minimal()
# Inside bars
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = len), vjust = 1.6, size = 3, color = "white") +
theme_minimal()
myCarData = mtcars
ggplot(data = myCarData, aes(x = factor(cyl))) +
geom_bar(stat = "count", width = 0.7, fill = "steelblue") +
theme_minimal()
#Changing barplot line colors by groups
print(dataset
)
ggplot(datase,aes(x = dose, y = len))+
geom_bar(stat = 'identity', fil = 'white')
ggplot(dataset,aes(x = dose, y = len))+
geom_bar(stat = 'identity', fil = 'white')
ggplot(dataset,aes(x = dose, y = len))+
geom_bar(stat = 'identity', fil = 'white')
ggplot(dataset,aes(x = dose, y = len))+
geom_bar(stat = 'identity', fill = 'white')
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')
# Using custom color palettes
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
scale_colour_manual(values = c('blue', 'red', 'black'))
# Using brewer color palettes
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
scale_color_brewer(palette = 'Dark2')
# Using a grey scale
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
scale_color_gray()
# Using a grey scale
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
scale_color_grey()
# Using a grey scale
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
scale_color_grey() +
theme_classic()
#Changing barplot fill colors by groups
ggplot(dataset,aes(x = dose, y = len, fill = dose))+
geom_bar(stat = 'identity')
#Changing barplot fill colors by groups
ggplot(dataset,aes(x = dose, y = len, fill = dose, color = dose))+
geom_bar(stat = 'identity')
#Changing barplot fill colors by groups
ggplot(dataset,aes(x = dose, y = len, fill = dose, color = dose))+
geom_bar(stat = 'identity') +
theme_minimal()
#Changing barplot fill colors by groups
ggplot(dataset,aes(x = dose, y = len, fill = dose))+
geom_bar(stat = 'identity') +
theme_minimal()
p + scale_fill_manual(values = c('blue', 'red', 'black'))
#Changing barplot fill colors by groups
p = ggplot(dataset,aes(x = dose, y = len, fill = dose))+
geom_bar(stat = 'identity') +
theme_minimal()
p + scale_fill_manual(values = c('blue', 'red', 'black'))
p + scale_fill_manual(values = c('blue', 'red', 'grey'))
p + scale_fill_manual(values = c('blue', 'red', 'darkgrey'))
P + scale_fill_brewer(palette = Dark2)
#Changing barplot fill colors by groups
p = ggplot(dataset,aes(x = dose, y = len, fill = dose))+
geom_bar(stat = 'identity') +
theme_minimal()
p + scale_fill_brewer(palette = Dark2)
p + scale_fill_brewer(palette = Dark2)
p + scale_fill_brewer(palette = 'Dark2')
p + scale_fill_grey()
# Using a black outline color
p + scale_fill_manual(values = c('blue', 'red', 'darkgrey'))
scale_colour_manual(values = c('blue', 'red', 'pink''))
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
# Using custom color palettes
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
scale_colour_manual(values = c('blue', 'red', 'black'))
scale_colour_manual(values = c('blue', 'red', 'pink''))
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
# Using a black outline color
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', fill = 'white')+
scale_colour_manual(values = c('blue', 'red', 'black'))
# Using a black outline color
ggplot(dataset,aes(x = dose, y = len, color = dose))+
geom_bar(stat = 'identity', color = 'black')+
scale_colour_manual(values = c('blue', 'red', 'blue'))
# Using a black outline color
ggplot(dataset,aes(x = dose, y = len, fill = dose))+
geom_bar(stat = 'identity', color = 'black')+
scale_colour_manual(values = c('blue', 'red', 'blue'))
# Using a black outline color
ggplot(dataset,aes(x = dose, y = len, fill = dose))+
geom_bar(stat = 'identity', color = 'black')+
scale_colour_manual(values = c('blue', 'red', 'blue')) +
theme(legend.position = "top")
setwd("~/Desktop/GitHub practice/R-for-Data-Science-and-MachineLearning-with-NBICTLab-Batch-8/RDSML-Day-17 ðŸ‘‰ Error Bars in R (Part-1)")
ToothGrowth
tooth_data = ToothGrowth
view(ToothGrowth)
View(ToothGrowth)
sum(23,67,78,90,56)
add_values <- function(x, y) {
result <- x + y
return(result)
}
add_values(23.24)
add_values(23,24)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_fun = function(x, col){
c(mean) = mean(x[[col]],na.rm = TRUE, sd = sd(x[[]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun =summary_fun, varname)
data_sum = rename (data_sum, c("mean" = varnam))
return(data_sum)
}
d_summary = data_summary(tooth_data, var = "len", groupnames = c("supp", "dose"))
d_summary = data_summary(tooth_data, var = "len", groupnames = c("supp", "dose"))
data_summary = function(data, varname, groupnames){
require(plyr)
summary_fun = function(x, col){
c(mean) = mean(x[[col]],na.rm = TRUE, sd = sd(x[[]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun =summary_fun, varname)
data_sum = rename (data_sum, c("mean" = varnam))
return(data_sum)
}
d_summary = data_summary(tooth_data, var = "len", groupnames = c("supp", "dose"))
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]], na.rm = TRUE), sd = sd(x[[col]], na.rm = TRUE))
}
data_sum = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(data_sum, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, var = "len", groupnames = c("supp", "dose"))
View(data_summary)
View(data_summary)
View(d_summary)
